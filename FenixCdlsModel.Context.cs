//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FenixSendCdlManually
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FenixCdlsEntities : DbContext
    {
        public FenixCdlsEntities()
            : base("name=FenixCdlsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cdlItems> cdlItems { get; set; }
        public virtual DbSet<cdlMeasures> cdlMeasures { get; set; }
        public virtual DbSet<cdlKits> cdlKits { get; set; }
        public virtual DbSet<cdlKitsItems> cdlKitsItems { get; set; }
        public virtual DbSet<cdlItemTypes> cdlItemTypes { get; set; }
    
        public virtual int prCdlItemsSetSent(Nullable<int> itemID, ObjectParameter returnValue, ObjectParameter returnMessage)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prCdlItemsSetSent", itemIDParameter, returnValue, returnMessage);
        }
    
        public virtual int prCdlKitsSetSent(Nullable<int> itemID, ObjectParameter returnValue, ObjectParameter returnMessage)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prCdlKitsSetSent", itemIDParameter, returnValue, returnMessage);
        }
    
        public virtual int prGetIntValueFromCounter(string counterName, ObjectParameter newValue)
        {
            var counterNameParameter = counterName != null ?
                new ObjectParameter("CounterName", counterName) :
                new ObjectParameter("CounterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prGetIntValueFromCounter", counterNameParameter, newValue);
        }
    }
}
